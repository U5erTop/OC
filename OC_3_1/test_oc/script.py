# Создадим план практической работы по архитектурным подходам ОС
import json

# Структура практической работы на 60 минут
practical_work = {
    "title": "Практическая работа: Изучение архитектурных подходов операционных систем",
    "duration": "60 минут",
    "objectives": [
        "Понять различия между монолитной, микроядерной и гибридной архитектурами ОС",
        "Провести практический анализ реальных операционных систем",
        "Создать сравнительную таблицу архитектурных решений",
        "Выполнить интерактивное моделирование работы различных архитектур"
    ],
    "equipment": [
        "Компьютер с доступом к различным ОС (Windows, Linux)",
        "Интернет для исследования",
        "Презентационное оборудование",
        "Раздаточный материал с заданиями"
    ],
    "tasks": [
        {
            "task_number": 1,
            "title": "Теоретическое введение и анализ существующих систем",
            "duration": "15 минут",
            "description": "Изучение основных концепций и анализ реальных примеров ОС"
        },
        {
            "task_number": 2,
            "title": "Интерактивное исследование архитектуры",
            "duration": "20 минут",
            "description": "Практическое исследование архитектуры с помощью системных команд"
        },
        {
            "task_number": 3,
            "title": "Моделирование и сравнение",
            "duration": "15 минут",
            "description": "Создание схем и проведение сравнительного анализа"
        },
        {
            "task_number": 4,
            "title": "Презентация результатов и обсуждение",
            "duration": "10 минут",
            "description": "Представление выводов и групповое обсуждение"
        }
    ]
}

# Детальные задания для каждого этапа
detailed_tasks = {
    "task_1": {
        "materials": [
            "Презентация с основными концепциями",
            "Карточки с примерами ОС",
            "Схемы архитектур"
        ],
        "activities": [
            "Мини-лекция (5 мин)",
            "Групповая работа с карточками (10 мин)"
        ],
        "deliverable": "Заполненная таблица классификации ОС"
    },
    "task_2": {
        "commands": [
            "lsmod - просмотр загруженных модулей ядра",
            "uname -a - информация о системе",
            "cat /proc/version - версия ядра",
            "systeminfo - информация о Windows",
            "ps aux | head -20 - процессы системы"
        ],
        "activities": [
            "Выполнение команд в Linux (10 мин)",
            "Выполнение команд в Windows (10 мин)"
        ],
        "deliverable": "Отчет с результатами команд и выводами"
    },
    "task_3": {
        "modeling_scenarios": [
            "Сценарий 1: Сбой драйвера в монолитной системе",
            "Сценарий 2: Сбой сервиса в микроядерной системе",
            "Сценарий 3: Производительность различных архитектур"
        ],
        "activities": [
            "Создание схем архитектур (8 мин)",
            "Анализ сценариев (7 мин)"
        ],
        "deliverable": "Схемы архитектур и анализ сценариев"
    },
    "task_4": {
        "presentation_format": "5-минутные выступления групп",
        "discussion_topics": [
            "Какая архитектура лучше подходит для серверов?",
            "Почему современные ОС используют гибридные подходы?",
            "Будущее архитектур ОС"
        ],
        "deliverable": "Групповые выводы и рекомендации"
    }
}

print("=== ПЛАН ПРАКТИЧЕСКОЙ РАБОТЫ СОЗДАН ===")
print(f"Название: {practical_work['title']}")
print(f"Продолжительность: {practical_work['duration']}")
print(f"Количество заданий: {len(practical_work['tasks'])}")

# Сохраним план в формате для дальнейшего использования
practical_work_json = json.dumps(practical_work, ensure_ascii=False, indent=2)
detailed_tasks_json = json.dumps(detailed_tasks, ensure_ascii=False, indent=2)

print("\n=== СТРУКТУРА ЗАДАНИЙ ===")
for task in practical_work['tasks']:
    print(f"{task['task_number']}. {task['title']} ({task['duration']})")
    print(f"   {task['description']}")

print("\n=== МАТЕРИАЛЫ И РЕСУРСЫ ===")
for equipment in practical_work['equipment']:
    print(f"- {equipment}")